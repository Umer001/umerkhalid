{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAIER\\\\Documents\\\\VSCode\\\\root\\\\projects\\\\food-ordering-system\\\\src\\\\containers\\\\products-react-query.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction usePosts() {\n  _s();\n  return useQuery(\"posts\", async () => {\n    const {\n      data\n    } = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    return data.json;\n  });\n}\n_s(usePosts, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nfunction Posts(_ref) {\n  _s2();\n  let {\n    setPostId\n  } = _ref;\n  const queryClient = useQueryClient();\n  const {\n    status,\n    data,\n    error,\n    isFetching\n  } = usePosts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: status === \"loading\" ? \"Loading...\" : status === \"error\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.map(post => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => setPostId(post.id),\n              href: \"#\",\n              style:\n              // We can access the query data here to show bold links for\n              // ones that are cached\n              queryClient.getQueryData([\"post\", post.id]) ? {\n                fontWeight: \"bold\",\n                color: \"green\"\n              } : {},\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isFetching ? \"Background Updating...\" : \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s2(Posts, \"1T4LeQlXfB8Ix9O5Q6ABpVR+msU=\", false, function () {\n  return [useQueryClient, usePosts];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useQuery","useQueryClient","usePosts","data","fetch","json","Posts","setPostId","queryClient","status","error","isFetching","message","map","post","id","getQueryData","fontWeight","color","title"],"sources":["C:/Users/HAIER/Documents/VSCode/root/projects/food-ordering-system/src/containers/products-react-query.jsx"],"sourcesContent":["import { useQuery, useQueryClient } from \"react-query\";\r\nfunction usePosts() {\r\n  return useQuery(\"posts\", async () => {\r\n    const { data } = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n    return data.json;\r\n  });\r\n}\r\nfunction Posts({ setPostId }) {\r\n  const queryClient = useQueryClient();\r\n  const { status, data, error, isFetching } = usePosts();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      <div>\r\n        {status === \"loading\" ? (\r\n          \"Loading...\"\r\n        ) : status === \"error\" ? (\r\n          <span>Error: {error.message}</span>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              {data.map((post) => (\r\n                <p key={post.id}>\r\n                  <a\r\n                    onClick={() => setPostId(post.id)}\r\n                    href=\"#\"\r\n                    style={\r\n                      // We can access the query data here to show bold links for\r\n                      // ones that are cached\r\n                      queryClient.getQueryData([\"post\", post.id])\r\n                        ? {\r\n                            fontWeight: \"bold\",\r\n                            color: \"green\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                  >\r\n                    {post.title}\r\n                  </a>\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <div>{isFetching ? \"Background Updating...\" : \" \"}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Posts;\r\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,aAAa;AAAC;AAAA;AACvD,SAASC,QAAQ,GAAG;EAAA;EAClB,OAAOF,QAAQ,CAAC,OAAO,EAAE,YAAY;IACnC,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IAC1E,OAAOD,IAAI,CAACE,IAAI;EAClB,CAAC,CAAC;AACJ;AAAC,GALQH,QAAQ;EAAA,QACRF,QAAQ;AAAA;AAKjB,SAASM,KAAK,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAC1B,MAAMC,WAAW,GAAGP,cAAc,EAAE;EACpC,MAAM;IAAEQ,MAAM;IAAEN,IAAI;IAAEO,KAAK;IAAEC;EAAW,CAAC,GAAGT,QAAQ,EAAE;EAEtD,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAA,UACGO,MAAM,KAAK,SAAS,GACnB,YAAY,GACVA,MAAM,KAAK,OAAO,gBACpB;QAAA,sBAAcC,KAAK,CAACE,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,gBAEnC;QAAA,wBACE;UAAA,UACGT,IAAI,CAACU,GAAG,CAAEC,IAAI,iBACb;YAAA,uBACE;cACE,OAAO,EAAE,MAAMP,SAAS,CAACO,IAAI,CAACC,EAAE,CAAE;cAClC,IAAI,EAAC,GAAG;cACR,KAAK;cACH;cACA;cACAP,WAAW,CAACQ,YAAY,CAAC,CAAC,MAAM,EAAEF,IAAI,CAACC,EAAE,CAAC,CAAC,GACvC;gBACEE,UAAU,EAAE,MAAM;gBAClBC,KAAK,EAAE;cACT,CAAC,GACD,CAAC,CACN;cAAA,UAEAJ,IAAI,CAACK;YAAK;cAAA;cAAA;cAAA;YAAA;UACT,GAhBEL,IAAI,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QAkBhB;QAAC;UAAA;UAAA;UAAA;QAAA,QACE,eACN;UAAA,UAAMJ,UAAU,GAAG,wBAAwB,GAAG;QAAG;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;IAE3D;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,IA1CQL,KAAK;EAAA,QACQL,cAAc,EACUC,QAAQ;AAAA;AAAA,KAF7CI,KAAK;AA2Cd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}