{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAIER\\\\Documents\\\\VSCode\\\\root\\\\projects\\\\food-ordering-system\\\\src\\\\containers\\\\products-react-query.jsx\",\n  _s2 = $RefreshSig$();\nimport { useQuery, useQueryClient, QueryClient, QueryClientProvider } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts(_ref) {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    setPostId\n  } = _ref;\n  function usePosts() {\n    _s();\n    return useQuery(\"posts\", async () => {\n      const response = await fetch(\"https://fakestoreapi.com/products\");\n      const data = await response.json();\n      return data;\n    });\n  }\n  _s(usePosts, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  const queryClient = useQueryClient();\n  const {\n    status,\n    data,\n    error,\n    isFetching\n  } = usePosts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: status === \"loading\" ? \"Loading...\" : status === \"error\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: data === null || data === void 0 ? void 0 : data.map(post => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => setPostId(post.id),\n              href: \"#\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isFetching ? \"Background Updating...\" : \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s2(Posts, \"1T4LeQlXfB8Ix9O5Q6ABpVR+msU=\", false, function () {\n  return [useQueryClient, usePosts];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useQuery","useQueryClient","QueryClient","QueryClientProvider","Posts","setPostId","usePosts","response","fetch","data","json","queryClient","status","error","isFetching","message","map","post","id","title"],"sources":["C:/Users/HAIER/Documents/VSCode/root/projects/food-ordering-system/src/containers/products-react-query.jsx"],"sourcesContent":["import {\r\n  useQuery,\r\n  useQueryClient,\r\n  QueryClient,\r\n  QueryClientProvider,\r\n} from \"react-query\";\r\nfunction Posts({ setPostId }) {\r\n  function usePosts() {\r\n    return useQuery(\"posts\", async () => {\r\n      const response = await fetch(\"https://fakestoreapi.com/products\");\r\n      const data = await response.json();\r\n      return data;\r\n    });\r\n  }\r\n\r\n  const queryClient = useQueryClient();\r\n  const { status, data, error, isFetching } = usePosts();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      <div>\r\n        {status === \"loading\" ? (\r\n          \"Loading...\"\r\n        ) : status === \"error\" ? (\r\n          <span>Error: {error.message}</span>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              {data?.map((post) => (\r\n                <p key={post.id}>\r\n                  <a onClick={() => setPostId(post.id)} href=\"#\">\r\n                    {post.title}\r\n                  </a>\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <div>{isFetching ? \"Background Updating...\" : \" \"}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Posts;\r\n"],"mappings":";;AAAA,SACEA,QAAQ,EACRC,cAAc,EACdC,WAAW,EACXC,mBAAmB,QACd,aAAa;AAAC;AAAA;AACrB,SAASC,KAAK,OAAgB;EAAA;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAC1B,SAASC,QAAQ,GAAG;IAAA;IAClB,OAAON,QAAQ,CAAC,OAAO,EAAE,YAAY;MACnC,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC;EACJ;EAAC,GANQH,QAAQ;IAAA,QACRN,QAAQ;EAAA;EAOjB,MAAMW,WAAW,GAAGV,cAAc,EAAE;EACpC,MAAM;IAAEW,MAAM;IAAEH,IAAI;IAAEI,KAAK;IAAEC;EAAW,CAAC,GAAGR,QAAQ,EAAE;EAEtD,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAA,UACGM,MAAM,KAAK,SAAS,GACnB,YAAY,GACVA,MAAM,KAAK,OAAO,gBACpB;QAAA,sBAAcC,KAAK,CAACE,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,gBAEnC;QAAA,wBACE;UAAA,UACGN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,GAAG,CAAEC,IAAI,iBACd;YAAA,uBACE;cAAG,OAAO,EAAE,MAAMZ,SAAS,CAACY,IAAI,CAACC,EAAE,CAAE;cAAC,IAAI,EAAC,GAAG;cAAA,UAC3CD,IAAI,CAACE;YAAK;cAAA;cAAA;cAAA;YAAA;UACT,GAHEF,IAAI,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QAKhB;QAAC;UAAA;UAAA;UAAA;QAAA,QACE,eACN;UAAA,UAAMJ,UAAU,GAAG,wBAAwB,GAAG;QAAG;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;IAE3D;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,IArCQV,KAAK;EAAA,QASQH,cAAc,EACUK,QAAQ;AAAA;AAAA,KAV7CF,KAAK;AAsCd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}